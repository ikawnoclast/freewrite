#!/usr/bin/bash

#
# freewrite
#
#	A script to simple the freewriting process.
#

umask 022

# create a safe temporary file time data output
tmp_file=$(mktemp)

# create an associative array in which to store session_data
declare -A session_data

# load user configuration file
config_file="$HOME/.freewriterc"
if [ -r $config_file ]; then
	source "$config_file"
else
	echo "$0: \"$config_file\" does not exist. Exiting"
	exit 1
fi

# determine script storage directory
_source="${BASH_SOURCE[0]}"
while [ -h "$_source" ] ; do _source="$(readlink "$_source")"; done
_script_dir="$( cd -P "$( dirname "$_source" )" && pwd )"

# parse command line arguments and set modes of operation
_safe_mode="no"
_debug_mode="no"
while getopts ":hsd" opt; do
	case $opt in
		h)
		echo "$0 [-h] [-s] [-d]" >&2
		echo -e "\t-h\tThis help message." >&2
		echo -e "\t-s\tSafe mode. Does not use any functions." >&2
		echo -e "\t-d\tDebug mode. Provides additional output." >&2
		exit 0
		;;
		s)
		_safe_mode="yes"
		;;
		d)
		_debug_mode="yes"
		;;
		\?)
      	echo "Invalid option: -$OPTARG" >&2
      	;;
  	esac
done

# load internal freewrite functions
source "$_script_dir/internal_functions"

# kill any background jobs exiting on various signals
trap "_terminate_bg_jobs && rm -f $tmp_file" EXIT QUIT HUP INT

# load all external functions from their respective files
_load_external_functions

# set color variables needed for colorful output
_set_color_codes

# execute the functions for operations to be conducted before and during the
#  free write session
_execute_function_list "$before_function_list"
_execute_function_list "$during_function_list"

# save the state of specific options into session data
session_data["debug_mode"]=$_debug_mode
session_data["safe_mode"]=$_safe_mode

# find the lines in the session file to put the user in the "right" spot to 
#  edit
jump_to=$(wc -l "$session_file" | awk '{print $1}')

# specify the bash time format string to capture the time spent writing
TIMEFORMAT="%0lR"

# open an editor with a template and dated filename (and append the time
#  spent in the editor to the temporary file)
{ time $editor +$jump_to $editor_opts "$session_file" ; } 2>> "$tmp_file"
# capture the time data from the temporary file into the session data array
session_data["writing_time"]=$(head -1 $tmp_file)

# run functions after the free write session
_execute_function_list "$after_function_list"

# dump the collected session_data to the data file
for index in ${!session_data[@]}; do
	echo "$index: ${session_data[$index]}" >> "$data_file"
done

exit 0
